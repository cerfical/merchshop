openapi: 3.0.0
info:
  title: Merch shop
  version: 1.0.0

servers:
  - url: http://localhost:8080

security:
  - BearerAuth: []

paths:
  /api/info:
    get:
      summary: Get information about coins, inventory and transaction history
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/sendCoin:
    post:
      summary: Send coins to another user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendCoinRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/buy/{item}:
    get:
      summary: Buy merch item for coins
      security:
        - BearerAuth: []
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/auth:
    post:
      summary: Authenticate the user and obtain a JWT token. The user is created automatically upon first authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    InfoResponse:
      type: object
      properties:
        coins:
          type: integer
          description: The amount of available coins
        inventory:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: Merch kind
              quantity:
                type: integer
                description: The number of bought items
        coinHistory:
          type: object
          properties:
            received:
              type: array
              items:
                type: object
                properties:
                  fromUser:
                    type: string
                    description: The user who sent the coins
                  amount:
                    type: integer
                    description: The amount of received coins
            sent:
              type: array
              items:
                type: object
                properties:
                  toUser:
                    type: string
                    description: The user who received the coins
                  amount:
                    type: integer
                    description: The amount of sent coins

    ErrorResponse:
      type: object
      properties:
        errors:
          type: string
          description: Error message describing the problem

    AuthRequest:
      type: object
      properties:
        username:
          type: string
          description: Username to authenticate
        password:
          type: string
          format: password
          description: Authentication password
      required:
        - username
        - password

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token to access protected resources

    SendCoinRequest:
      type: object
      properties:
        toUser:
          type: string
          description: The user to receive the sent coins
        amount:
          type: integer
          description: The number of coins to send
      required:
        - toUser
        - amount
